name: $(major).$(minor).$(build)
trigger:
  - main

pool:
  vmImage: 'windows-latest'



variables:
  major: 1
  minor: 101
  build: $[counter(format('{0}.{1}', variables['major'], variables['minor']), 1)]
  formattedVersion: '$(major).$(minor).$(build)'
  solution: 'source/Portal.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'


steps:
- powershell: |
    $timestamp = Get-Date -Format "yyyy-MM-ddTHH:mm:ssZ"
    $json = @{
      version = "$(formattedVersion)"
      buildTimestamp = $timestamp
      gitBranch = "$(Build.SourceBranchName)"
      gitHash = "$(Build.SourceVersion)"
    } | ConvertTo-Json -Compress
    $json | Out-File "$(Build.ArtifactStagingDirectory)\version.json" -Encoding utf8

    Write-Host "`nðŸ“¦ Listing contents of build output folder:"
    Get-ChildItem -Path "$(Build.ArtifactStagingDirectory)"

    Write-Host "`nðŸ“„ Showing contents of version.json:"
    Get-Content -Path "$(Build.ArtifactStagingDirectory)\version.json"
  displayName: 'Generate version.json using EMS format'


- powershell: |
    # Install AWS CLI if not already available
    if (-not (Get-Command "aws" -ErrorAction SilentlyContinue)) {
      Invoke-WebRequest "https://awscli.amazonaws.com/AWSCLIV2.msi" -OutFile "$env:TEMP\AWSCLIV2.msi"
      Start-Process msiexec.exe -ArgumentList "/i `"$env:TEMP\AWSCLIV2.msi`" /quiet" -Wait
    }

    # Set AWS credentials for this session
    $env:AWS_ACCESS_KEY_ID = "$(AWS_ACCESS_KEY_ID)"
    $env:AWS_SECRET_ACCESS_KEY = "$(AWS_SECRET_ACCESS_KEY)"

    # Optionally set AWS region
    $env:AWS_DEFAULT_REGION = "us-east-1"  # Change if needed
    # Path to version.json
    $versionFilePath = "$(Build.ArtifactStagingDirectory)\version.json"

    # Parse version from JSON file
    $json = Get-Content $versionFilePath | ConvertFrom-Json
    $version = $json.version

    # Set up versioned folder
    $targetFolder = "$(Build.ArtifactStagingDirectory)\$version"
    New-Item -Path $targetFolder -ItemType Directory -Force
    Move-Item -Path $versionFilePath -Destination "$targetFolder\version.json" -Force

    # Upload folder to S3
    aws s3 cp "$targetFolder" "s3://portal-test-alpha-1/compile/$version/" --recursive

    Write-Host "`nâœ… Uploaded folder '$version' to S3 with version.json inside."
  displayName: 'Upload versioned folder to S3 using value from version.json'
